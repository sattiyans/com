---
export interface Props {
  item: {
    id: string;
    title: string;
    year: number;
    type: 'film' | 'series';
    platform: 'letterboxd' | 'serializd';
    watchedDate: Date;
    rating?: number;
    posterUrl?: string;
    url?: string;
    episode?: string;
    season?: number;
  };
}

const { item } = Astro.props;

const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat('en-US', {
    month: 'short',
    day: 'numeric'
  }).format(date);
};

const formatRating = (rating: number) => {
  if (rating === 0.5) return '½';
  if (rating === 1) return '★';
  if (rating === 1.5) return '★½';
  if (rating === 2) return '★★';
  if (rating === 2.5) return '★★½';
  if (rating === 3) return '★★★';
  if (rating === 3.5) return '★★★½';
  if (rating === 4) return '★★★★';
  if (rating === 4.5) return '★★★★½';
  if (rating === 5) return '★★★★★';
  return '';
};
---

<div class="group relative">
  <a href={item.url} target="_blank" rel="noopener noreferrer" class="block">
    <div class="relative overflow-hidden rounded-lg border border-black/15 bg-white dark:border-white/15 dark:bg-white/5">
      <!-- Poster -->
      <div class="aspect-[2/3] overflow-hidden">
        {item.posterUrl ? (
          <img 
            src={item.posterUrl} 
            alt={`Poster for ${item.title}`}
            class="h-full w-full object-cover transition-transform duration-300 group-hover:scale-105"
            loading="lazy"
          />
        ) : (
          <div class="flex h-full w-full items-center justify-center bg-gray-200 dark:bg-gray-800">
            <span class="text-sm text-gray-500 dark:text-gray-400">No poster</span>
          </div>
        )}
      </div>
      
      <!-- Content -->
      <div class="p-3">
        <h3 class="min-w-0 text-sm font-medium text-gray-900 dark:text-gray-100">
          {item.title}
        </h3>
        {item.rating && (
          <div class="mt-1">
            <span class="text-xs text-yellow-500 font-medium">
              {formatRating(item.rating)}
            </span>
          </div>
        )}
        <div class="mt-1 flex items-center justify-between text-xs text-gray-600 dark:text-gray-400">
          <span>{item.year}</span>
          <span>{formatDate(item.watchedDate)}</span>
        </div>
      </div>
    </div>
  </a>
</div> 