---
// GitHub Streak component - shows coding streak based on commits
---

<style>
  @keyframes code-typing {
    0%, 100% { 
      opacity: 0.6;
      transform: scale(0.9);
    }
    50% { 
      opacity: 1;
      transform: scale(1.1);
    }
  }
  
  @keyframes commit-pulse {
    0%, 100% { 
      opacity: 0.4;
      transform: scale(0.8);
    }
    50% { 
      opacity: 1;
      transform: scale(1.2);
    }
  }
  
  @keyframes fire-flicker {
    0%, 100% { 
      opacity: 0.8;
      transform: scale(1) rotate(-2deg);
    }
    25% { 
      opacity: 1;
      transform: scale(1.1) rotate(1deg);
    }
    50% { 
      opacity: 0.9;
      transform: scale(0.95) rotate(-1deg);
    }
    75% { 
      opacity: 1;
      transform: scale(1.05) rotate(2deg);
    }
  }
  
  @keyframes lightning-flash {
    0%, 100% { 
      opacity: 0.7;
      transform: scale(1);
    }
    50% { 
      opacity: 1;
      transform: scale(1.2);
    }
  }
  
  .code-typing {
    animation: code-typing 2s ease-in-out infinite;
  }
  
  .commit-pulse {
    animation: commit-pulse 1.5s ease-in-out infinite;
  }
  
  .fire-flicker {
    animation: fire-flicker 1.8s ease-in-out infinite;
  }
  
  .lightning-flash {
    animation: lightning-flash 1.2s ease-in-out infinite;
  }
  
  @keyframes dropup {
    0% {
      opacity: 0;
      transform: translateY(10px) scale(0.95);
    }
    100% {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }
  
  .dropup {
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    margin-bottom: 8px;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(0, 0, 0, 0.1);
    border-radius: 12px;
    padding: 16px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.15);
    min-width: 280px;
    max-width: 320px;
    animation: dropup 0.2s ease-out;
    z-index: 100;
  }
  
  .dark .dropup {
    background: rgba(0, 0, 0, 0.95);
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
  }
  
  .dropup-arrow {
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    width: 0;
    height: 0;
    border-left: 8px solid transparent;
    border-right: 8px solid transparent;
    border-top: 8px solid rgba(255, 255, 255, 0.95);
  }
  
  .dark .dropup-arrow {
    border-top: 8px solid rgba(0, 0, 0, 0.95);
  }
  
  .github-container {
    position: relative;
  }
</style>

<div class="animate">
  <div id="github-streak" class="github-container">
    <div class="flex items-center gap-2 text-xs">
      <!-- Loading skeleton -->
      <div class="animate-pulse flex items-center gap-2">
        <div class="w-3 h-3 bg-gray-200 dark:bg-gray-700 rounded-full"></div>
        <div class="h-3 bg-gray-200 dark:bg-gray-700 rounded w-24"></div>
      </div>
    </div>
  </div>
  
  <!-- Dropup (hidden by default) - moved outside container -->
  <div id="github-dropup" class="dropup hidden">
    <div class="dropup-arrow"></div>
    <div class="text-center">
      <div class="flex items-center justify-center gap-2 mb-3">
        <div class="w-8 h-8 bg-gray-800 dark:bg-gray-200 rounded-full flex items-center justify-center">
          <svg class="w-5 h-5 text-white dark:text-gray-800" viewBox="0 0 24 24" fill="currentColor">
            <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
          </svg>
        </div>
        <span class="text-sm font-semibold text-gray-800 dark:text-white">GitHub Activity</span>
      </div>
      <div id="github-stats" class="space-y-3">
        <!-- Stats will be populated here -->
      </div>
      <a href="https://github.com/sattiyans" target="_blank" rel="noopener noreferrer" class="inline-flex items-center gap-2 mt-3 px-4 py-2 bg-gray-800 dark:bg-gray-200 text-white dark:text-gray-800 rounded-lg hover:bg-gray-700 dark:hover:bg-gray-300 transition-colors duration-200 text-sm font-medium">
        <svg class="w-4 h-4" viewBox="0 0 24 24" fill="currentColor">
          <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
        </svg>
        View Profile
      </a>
    </div>
  </div>
</div>

<script>
  async function loadGitHubStreak() {
    try {
      const response = await fetch('/api/github-streak');
      const data = await response.json();
      
      const container = document.getElementById('github-streak');
      if (!container) return;
      
      if (data.error) {
        // Store error data for unified banner
        (window as any).githubData = {
          type: 'github',
          currentStreak: 0,
          longestStreak: 0,
          thisYearCommits: 0,
          error: data.error
        };
        
        container.innerHTML = `
          <div class="group inline-flex items-center gap-1.5 px-2.5 py-1.5 bg-transparent hover:bg-gray-100 dark:hover:bg-gray-800 rounded-full text-xs font-medium transition-colors duration-200 whitespace-nowrap cursor-pointer" id="github-trigger">
            <div class="w-1.5 h-1.5 bg-red-400 rounded-full"></div>
            <span class="text-red-700 dark:text-red-300">API Error</span>
          </div>
        `;
        return;
      }
      
      const { currentStreak, longestStreak, thisYearCommits } = data;
      
      // Store data for unified banner
      (window as any).githubData = {
        type: 'github',
        currentStreak,
        longestStreak,
        thisYearCommits,
        error: null
      };
      
      // Determine streak status and colors
      let streakText, dotColor, animatedIcon;
      
      if (currentStreak === 0) {
        streakText = "No recent commits";
        dotColor = "bg-gray-400";
        animatedIcon = `
          <div class="relative w-4 h-4 flex items-center justify-center">
            <div class="w-3 h-3 border-2 border-gray-400 rounded-sm commit-pulse">
              <div class="w-1 h-1 bg-gray-400 rounded-full absolute top-0.5 left-0.5"></div>
              <div class="w-1 h-1 bg-gray-400 rounded-full absolute bottom-0.5 right-0.5"></div>
            </div>
          </div>
        `;
      } else if (currentStreak >= 7) {
        streakText = `${currentStreak} day streak`;
        dotColor = "bg-orange-500";
        animatedIcon = `
          <div class="relative w-4 h-4 flex items-center justify-center">
            <div class="text-orange-500 fire-flicker text-sm">ðŸ”¥</div>
          </div>
        `;
      } else if (currentStreak >= 3) {
        streakText = `${currentStreak} day streak`;
        dotColor = "bg-yellow-500";
        animatedIcon = `
          <div class="relative w-4 h-4 flex items-center justify-center">
            <div class="text-yellow-500 lightning-flash text-sm">âš¡</div>
          </div>
        `;
      } else {
        streakText = `${currentStreak} day streak`;
        dotColor = "bg-green-500";
        animatedIcon = `
          <div class="relative w-4 h-4 flex items-center justify-center">
            <div class="w-3 h-3 border-2 border-green-500 rounded-sm code-typing">
              <div class="w-1 h-1 bg-green-500 rounded-full absolute top-0.5 left-0.5"></div>
              <div class="w-1 h-1 bg-green-500 rounded-full absolute bottom-0.5 right-0.5"></div>
            </div>
          </div>
        `;
      }
      
          container.innerHTML = `
            <div class="group inline-flex items-center gap-1.5 px-2.5 py-1.5 bg-transparent hover:bg-gray-100 dark:hover:bg-gray-800 rounded-full text-xs font-medium transition-colors duration-200 whitespace-nowrap cursor-pointer" id="github-trigger">
              <div class="flex items-center gap-1">
                ${animatedIcon}
                <div class="w-1.5 h-1.5 ${dotColor} rounded-full group-hover:animate-pulse"></div>
              </div>
              <span class="text-gray-700 dark:text-gray-300 truncate max-w-[60px] sm:max-w-[100px]">${currentStreak}d</span>
            </div>
          `;
          
          // Populate dropup with stats
          const githubStats = document.getElementById('github-stats');
          
          if (githubStats) {
            githubStats.innerHTML = `
              <div class="grid grid-cols-2 gap-4 text-center">
                <div class="bg-gray-50 dark:bg-gray-800 rounded-lg p-3">
                  <div class="text-2xl font-bold text-gray-800 dark:text-white">${currentStreak}</div>
                  <div class="text-xs text-gray-600 dark:text-gray-400">Current Streak</div>
                </div>
                <div class="bg-gray-50 dark:bg-gray-800 rounded-lg p-3">
                  <div class="text-2xl font-bold text-gray-800 dark:text-white">${longestStreak}</div>
                  <div class="text-xs text-gray-600 dark:text-gray-400">Longest Streak</div>
                </div>
              </div>
              <div class="bg-gray-50 dark:bg-gray-800 rounded-lg p-3 text-center">
                <div class="text-lg font-bold text-gray-800 dark:text-white">${thisYearCommits}</div>
                <div class="text-xs text-gray-600 dark:text-gray-400">Commits This Year</div>
              </div>
            `;
          }
          
          // Add click event listener for dropup
          attachGitHubClickHandler();
    } catch (error) {
      console.error('Error loading GitHub streak:', error);
      const container = document.getElementById('github-streak');
      if (container) {
        container.innerHTML = `
          <div class="inline-flex items-center gap-2 px-3 py-1 bg-red-50 dark:bg-red-900/20 rounded-full text-xs font-medium whitespace-nowrap">
            <div class="w-1.5 h-1.5 bg-red-400 rounded-full"></div>
            <span class="text-red-700 dark:text-red-300">Unable to load</span>
          </div>
        `;
      }
    }
  }
  
  // Function to attach click handler for GitHub dropup
  function attachGitHubClickHandler() {
    const trigger = document.getElementById('github-trigger');
    const dropup = document.getElementById('github-dropup');
    
    console.log('Attaching GitHub click handler:', { trigger, dropup });
    
    if (trigger && dropup) {
      // Remove existing listener to avoid duplicates
      trigger.removeEventListener('click', handleGitHubClick);
      trigger.addEventListener('click', handleGitHubClick);
      console.log('GitHub click handler attached');
    } else {
      console.log('GitHub elements not found, retrying in 100ms');
      setTimeout(attachGitHubClickHandler, 100);
    }
  }
  
  function handleGitHubClick(e: Event) {
    console.log('GitHub clicked!');
    e.preventDefault();
    e.stopPropagation();
    const dropup = document.getElementById('github-dropup');
    if (dropup) {
      dropup.classList.toggle('hidden');
      console.log('GitHub dropup toggled');
    }
  }
  
  // Close dropup when clicking outside
  document.addEventListener('click', (e) => {
    const dropup = document.getElementById('github-dropup');
    const trigger = document.getElementById('github-trigger');
    if (dropup && e.target instanceof Node && !dropup.contains(e.target) && !trigger?.contains(e.target)) {
      dropup.classList.add('hidden');
    }
  });
  
  // Click handling is now managed by the global handler in SpotifyNowPlaying.astro
  
  // Load GitHub streak data when the component is visible
  document.addEventListener('DOMContentLoaded', () => {
    loadGitHubStreak();
    attachGitHubClickHandler();
  });
  
  // Refresh every 2 hours (GitHub data doesn't change frequently)
  setInterval(loadGitHubStreak, 7200000);
  
  // Refresh when page becomes visible
  document.addEventListener('visibilitychange', () => {
    if (!document.hidden) {
      loadGitHubStreak();
    }
  });
</script>
