---
// Spotify Now Playing component - minimal version
---

<style>
  @keyframes music-wave {
    0%, 100% { 
      transform: scaleY(0.3); 
      opacity: 0.7;
    }
    50% { 
      transform: scaleY(1); 
      opacity: 1;
    }
  }
  
  @keyframes dropup {
    0% {
      opacity: 0;
      transform: translateY(10px) scale(0.95);
    }
    100% {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }
  
  .dropup {
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    margin-bottom: 8px;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(0, 0, 0, 0.1);
    border-radius: 12px;
    padding: 16px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.15);
    min-width: 280px;
    max-width: 320px;
    animation: dropup 0.2s ease-out;
    z-index: 100;
  }
  
  .dark .dropup {
    background: rgba(0, 0, 0, 0.95);
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
  }
  
  .dropup-arrow {
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    width: 0;
    height: 0;
    border-left: 8px solid transparent;
    border-right: 8px solid transparent;
    border-top: 8px solid rgba(255, 255, 255, 0.95);
  }
  
  .dark .dropup-arrow {
    border-top: 8px solid rgba(0, 0, 0, 0.95);
  }
  
  .spotify-container {
    position: relative;
  }
</style>

<div class="animate" id="spotify-container" style="display: none;">
  <div id="spotify-now-playing" class="spotify-container">
    <div class="flex items-center gap-2 text-xs">
      <!-- Content will be populated by JavaScript -->
    </div>
  </div>
</div>

<script>
  async function loadSpotifyData() {
    try {
      console.log('Loading Spotify data...');
      const response = await fetch('/api/spotify-now-playing');
      const data = await response.json();
      
      console.log('Spotify API response:', data);
      
      const container = document.getElementById('spotify-now-playing');
      const spotifyContainer = document.getElementById('spotify-container');
      if (!container || !spotifyContainer) return;
      
      if (data.error || !data.isPlaying) {
        console.log('Spotify not playing or error:', data.error || 'No music playing');
        // Hide the entire Spotify component when not playing
        spotifyContainer.style.display = 'none';
        // Also hide the separator between Spotify and Last Watched
        const separator = document.getElementById('spotify-separator');
        if (separator) {
          separator.style.display = 'none';
        }
        // Notify floating bar that Spotify data is loaded (even if not playing)
        setTimeout(() => {
          if (window.showFloatingBar) {
            window.showFloatingBar();
          }
        }, 100);
        return;
      }
      
      // Show the container when music is playing
      spotifyContainer.style.display = 'block';
      // Show the separator when Spotify is playing
      const separator = document.getElementById('spotify-separator');
      if (separator) {
        separator.style.display = 'block';
      }
      // Notify floating bar that Spotify data is loaded
      setTimeout(() => {
        if (window.showFloatingBar) {
          window.showFloatingBar();
        }
      }, 100);
      
      container.innerHTML = `
            <div class="group inline-flex items-center gap-1.5 px-2.5 py-1.5 bg-transparent rounded-full text-xs font-medium transition-colors duration-200 whitespace-nowrap">
              <div class="flex items-center gap-0.5 h-3">
                <div class="w-0.5 h-1.5 bg-green-500 rounded-full" style="animation: music-wave 1.2s ease-in-out infinite; animation-delay: 0ms; transform-origin: bottom;"></div>
                <div class="w-0.5 h-2 bg-green-500 rounded-full" style="animation: music-wave 1.2s ease-in-out infinite; animation-delay: 150ms; transform-origin: bottom;"></div>
                <div class="w-0.5 h-1.5 bg-green-500 rounded-full" style="animation: music-wave 1.2s ease-in-out infinite; animation-delay: 300ms; transform-origin: bottom;"></div>
                <div class="w-0.5 h-2.5 bg-green-500 rounded-full" style="animation: music-wave 1.2s ease-in-out infinite; animation-delay: 450ms; transform-origin: bottom;"></div>
                <div class="w-0.5 h-1.5 bg-green-500 rounded-full" style="animation: music-wave 1.2s ease-in-out infinite; animation-delay: 600ms; transform-origin: bottom;"></div>
              </div>
              <span class="text-gray-700 dark:text-gray-300 truncate max-w-[100px] sm:max-w-[150px]">${data.trackName}</span>
            </div>
          `;
          
    } catch (error) {
      console.error('Error loading Spotify data:', error);
      const spotifyContainer = document.getElementById('spotify-container');
      if (spotifyContainer) {
        // Hide the container on error
        spotifyContainer.style.display = 'none';
      }
      // Also hide the separator on error
      const separator = document.getElementById('spotify-separator');
      if (separator) {
        separator.style.display = 'none';
      }
      // Notify floating bar that Spotify data is loaded (even if error)
      setTimeout(() => {
        if (window.showFloatingBar) {
          window.showFloatingBar();
        }
      }, 100);
    }
  }
  
  // Load Spotify data when the component is visible
  document.addEventListener('DOMContentLoaded', () => {
    loadSpotifyData();
  });
  
  // Refresh Spotify data every 30 seconds
  setInterval(loadSpotifyData, 30000);
  
  // Refresh when page becomes visible (user switches back to tab)
  document.addEventListener('visibilitychange', () => {
    if (!document.hidden) {
      loadSpotifyData();
    }
  });
</script>
