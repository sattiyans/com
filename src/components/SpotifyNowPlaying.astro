---
// Spotify Now Playing component - minimal version
---

<style>
  @keyframes music-wave {
    0%, 100% { 
      transform: scaleY(0.3); 
      opacity: 0.7;
    }
    50% { 
      transform: scaleY(1); 
      opacity: 1;
    }
  }
</style>

<div class="animate">
  <div class="flex items-center gap-2">
    <div id="spotify-now-playing" class="flex items-center gap-2 text-xs">
      <!-- Loading skeleton -->
      <div class="animate-pulse flex items-center gap-2">
        <div class="w-3 h-3 bg-gray-200 dark:bg-gray-700 rounded-full"></div>
        <div class="h-3 bg-gray-200 dark:bg-gray-700 rounded w-24"></div>
      </div>
    </div>
    <button 
      id="spotify-refresh" 
      onclick="loadSpotifyData()" 
      class="p-1 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-200"
      title="Refresh Spotify status"
    >
      <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
      </svg>
    </button>
  </div>
</div>

<script>
  async function loadSpotifyData() {
    const refreshButton = document.getElementById('spotify-refresh');
    if (refreshButton) {
      refreshButton.disabled = true;
      refreshButton.classList.add('animate-spin');
    }
    
    try {
      const response = await fetch('/api/spotify-now-playing');
      const data = await response.json();
      
      const container = document.getElementById('spotify-now-playing');
      if (!container) return;
      
      if (data.error || !data.isPlaying) {
        // Check if it's a credentials error
        if (data.error === 'Spotify credentials not configured') {
          container.innerHTML = `
            <div class="inline-flex items-center gap-2 px-3 py-1 bg-amber-50 dark:bg-amber-900/20 rounded-full text-xs font-medium">
              <div class="w-2 h-2 bg-amber-400 rounded-full"></div>
              <span class="text-amber-700 dark:text-amber-300">Spotify not configured</span>
            </div>
          `;
        } else {
          container.innerHTML = `
            <div class="inline-flex items-center gap-2 px-3 py-1 bg-gray-50 dark:bg-gray-900 rounded-full text-xs font-medium">
              <div class="w-2 h-2 bg-gray-400 rounded-full"></div>
              <span class="text-gray-500 dark:text-gray-400">Not playing</span>
            </div>
          `;
        }
        return;
      }
      
      container.innerHTML = `
        <a href="${data.trackUrl}" target="_blank" rel="noopener noreferrer" class="group inline-flex items-center gap-2 px-3 py-1 bg-gray-50 dark:bg-gray-900 rounded-full text-xs font-medium hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors duration-200">
          <div class="flex items-center gap-0.5 h-4">
            <div class="w-0.5 h-2 bg-green-500 rounded-full" style="animation: music-wave 1.2s ease-in-out infinite; animation-delay: 0ms; transform-origin: bottom;"></div>
            <div class="w-0.5 h-3 bg-green-500 rounded-full" style="animation: music-wave 1.2s ease-in-out infinite; animation-delay: 150ms; transform-origin: bottom;"></div>
            <div class="w-0.5 h-2 bg-green-500 rounded-full" style="animation: music-wave 1.2s ease-in-out infinite; animation-delay: 300ms; transform-origin: bottom;"></div>
            <div class="w-0.5 h-4 bg-green-500 rounded-full" style="animation: music-wave 1.2s ease-in-out infinite; animation-delay: 450ms; transform-origin: bottom;"></div>
            <div class="w-0.5 h-2 bg-green-500 rounded-full" style="animation: music-wave 1.2s ease-in-out infinite; animation-delay: 600ms; transform-origin: bottom;"></div>
          </div>
          <span class="text-gray-700 dark:text-gray-300 truncate max-w-[200px]">${data.trackName} - ${data.artistName}</span>
        </a>
      `;
    } catch (error) {
      console.error('Error loading Spotify data:', error);
      const container = document.getElementById('spotify-now-playing');
      if (container) {
        container.innerHTML = `
          <div class="inline-flex items-center gap-2 px-3 py-1 bg-red-50 dark:bg-red-900/20 rounded-full text-xs font-medium">
            <div class="w-2 h-2 bg-red-400 rounded-full"></div>
            <span class="text-red-700 dark:text-red-300">Unable to load</span>
          </div>
        `;
      }
    } finally {
      // Reset refresh button
      if (refreshButton) {
        refreshButton.disabled = false;
        refreshButton.classList.remove('animate-spin');
      }
    }
  }
  
  // Make function global for onclick
  window.loadSpotifyData = loadSpotifyData;
  
  // Load Spotify data when the component is visible
  document.addEventListener('DOMContentLoaded', loadSpotifyData);
  
  // Refresh Spotify data every 30 seconds
  setInterval(loadSpotifyData, 30000);
  
  // Refresh when page becomes visible (user switches back to tab)
  document.addEventListener('visibilitychange', () => {
    if (!document.hidden) {
      loadSpotifyData();
    }
  });
</script>
